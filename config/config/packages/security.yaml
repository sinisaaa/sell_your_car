security:
    enable_authenticator_manager: true
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'
    encoders:
        App\Entity\Account:
            algorithm: bcrypt
    providers:
         account_provider:
            entity:
                class: App\Entity\User
                property: username
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        docs:
            pattern: ^/docs
            stateless: true
            security: false
        login:
            pattern: ^/api/login
            stateless: true
            json_login:
                check_path: /api/login_check
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure
        public:
            pattern: ^/api/token/refresh|^/api/register|^/api/confirm-email|^/api/forgot-password|^/api/change-password
            stateless: true
            security: false
        public_api:
            pattern: ^/api/public
            stateless: true
            provider: account_provider
            jwt: ~
        api:
            pattern: ^/api
            stateless: true
            provider: account_provider
            jwt: ~

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/api/login, roles: PUBLIC_ACCESS }
        - { path: ^/api/public, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api/admin, roles: ROLE_ADMIN }
        - { path: ^/api,       roles: IS_AUTHENTICATED_FULLY }